buildscript {
    ext {
        // Plugins
        androidGradlePluginVersion = "3.5.0"
        gradleVersionsPluginVersion = "0.25.0"
        proguardGradlePluginVersion = "6.1.1"
        strictVersionMatcherPluginVersion = "1.1.0"

        // Libraries
        androidSupportVersion = "27.1.1"
        assertjAndroidVersion = "1.2.0"
        ckChangelogVersion = "1.2.2"
        constraintLayoutVersion = "1.1.3"
        espressoVersion = "2.2.2"
        jacksonVersion = "2.9.9"
        junitVersion = "4.12"
        kotlinVersion = "1.3.50"
        parcelerVersion = "1.1.12"
        playServicesVersion = "16.1.0"
        roadSignsVersion = "1.0.0"
        snackengagePlayrateVersion = "0.19"
        typedPreferencesVersion = "2.1.0"
    }

    repositories {
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$androidGradlePluginVersion"
        classpath "com.github.ben-manes:gradle-versions-plugin:$gradleVersionsPluginVersion"
        classpath "com.google.android.gms:strict-version-matcher-plugin:$strictVersionMatcherPluginVersion"
        classpath "net.sf.proguard:proguard-gradle:$proguardGradlePluginVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

apply plugin: "com.github.ben-manes.versions"

dependencyUpdates.resolutionStrategy {
    componentSelection {
        all {
            def isNonStable = { String version ->
                ["alpha", "beta", "rc", "cr", "m", "preview", "b", "ea"].any { qualifier ->
                    version ==~ /(?i).*[.-]$qualifier[.\d-+]*/
                }
            }
            if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
                reject("Release candidate")
            }
        }
    }
}
